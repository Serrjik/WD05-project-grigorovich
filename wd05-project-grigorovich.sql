-- phpMyAdmin SQL Dump
-- version 4.8.3
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3306
-- Generation Time: Feb 23, 2019 at 11:32 PM
-- Server version: 8.0.12
-- PHP Version: 7.2.10

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `wd05-project-grigorovich`
--

-- --------------------------------------------------------

--
-- Table structure for table `about`
--

CREATE TABLE `about` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `description` text NOT NULL,
  `photo` varchar(191) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `about`
--

INSERT INTO `about` (`id`, `name`, `description`, `photo`) VALUES
(1, 'Сергей Григорович', '<p>Я веб разработчик из Березино, Беларусь.</p>\r\n\r\n<p>Мне 35 лет. Занимаюсь разработкой современных сайтов и приложений. Мне нравится делать интересные и современные проекты.</p>\r\n\r\n<p>Этот сайт я сделал в рамках обучения в школе онлайн обучения WebCademy. Чуть позже я освежу в нём свой контент. А пока посмотрите, как тут всё классно и красиво!</p>\r\n\r\n<h2>Что я умею</h2>\r\n\r\n<p>Меня привлекет Frontend разработка, это не только моя работа, но и хобби. Также знаком и могу решать не сложные задачи на Backend.</p>\r\n\r\n<p>Знаком и использую современный workflow, работаю с репозиториями git и сборкой проекта на gulp.</p>', '181364909353.jpg');

-- --------------------------------------------------------

--
-- Table structure for table `categories`
--

CREATE TABLE `categories` (
  `id` int(11) UNSIGNED NOT NULL,
  `cat_title` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `categories`
--

INSERT INTO `categories` (`id`, `cat_title`) VALUES
(1, 'Путешествия'),
(3, 'Заметки'),
(4, 'Спорт'),
(5, 'PHP и его фреймворки'),
(19, 'ИТ-новости'),
(20, 'Истории'),
(21, 'Соцсети'),
(22, 'Дизайн');

-- --------------------------------------------------------

--
-- Table structure for table `comments`
--

CREATE TABLE `comments` (
  `id` int(11) UNSIGNED NOT NULL,
  `post_id` int(11) UNSIGNED DEFAULT NULL,
  `user_id` int(11) UNSIGNED DEFAULT NULL,
  `text` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `date_time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `comments`
--

INSERT INTO `comments` (`id`, `post_id`, `user_id`, `text`, `date_time`) VALUES
(1, 41, 18, 'Не люблю mail.ru.', '2019-02-11 16:47:39'),
(2, 41, 1, 'Интересно. Когда-нибудь попробую установить его.', '2019-02-11 19:02:58'),
(3, 41, 18, 'Стоит установить что-нибудь одно от mail.ru, обязательно следом подтянется приблуда. И попробуй ещё выкорчевать её!', '2019-02-11 19:43:42'),
(4, 41, 18, 'Приблуда от mail.ru подтянет за собой ещё одно приблуду. И ещё. И ещё.', '2019-02-11 21:32:03'),
(5, 39, 18, 'Экономно.', '2019-02-11 21:33:49'),
(6, 39, 1, 'Бережливо.', '2019-02-11 21:58:53'),
(7, 38, 23, 'Комментарий поста', '2019-02-11 22:13:45'),
(8, 31, 28, 'Хорошо, чтобы узоры в дизайне были не просто, а имели определенный смысл.', '2019-02-18 22:58:43');

-- --------------------------------------------------------

--
-- Table structure for table `contacts`
--

CREATE TABLE `contacts` (
  `id` int(11) NOT NULL,
  `email` varchar(191) DEFAULT NULL,
  `phone` varchar(255) DEFAULT NULL,
  `address` varchar(255) DEFAULT NULL,
  `name` varchar(191) DEFAULT NULL,
  `surname` varchar(191) DEFAULT NULL,
  `skype` varchar(191) DEFAULT NULL,
  `vkontakte` varchar(191) DEFAULT NULL,
  `facebook` varchar(191) DEFAULT NULL,
  `github` varchar(191) DEFAULT NULL,
  `twitter` varchar(191) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `contacts`
--

INSERT INTO `contacts` (`id`, `email`, `phone`, `address`, `name`, `surname`, `skype`, `vkontakte`, `facebook`, `github`, `twitter`) VALUES
(1, 'uac.sarge@gmail.com', '+(375) (29) 861-82-14', 'РБ, Минская обл., г. Березино', 'Сергей', 'Григорович', 'sarge.kelly', 'https://vk.com/uac_sarge', '', 'https://github.com/Serrjik', 'https://twitter.com/SargeUAC');

-- --------------------------------------------------------

--
-- Table structure for table `goods`
--

CREATE TABLE `goods` (
  `id` int(11) UNSIGNED NOT NULL,
  `title` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `price` int(11) UNSIGNED DEFAULT NULL,
  `price_old` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `desc` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci,
  `img` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `img_small` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `goods`
--

INSERT INTO `goods` (`id`, `title`, `price`, `price_old`, `desc`, `img`, `img_small`) VALUES
(1, 'SSD-накопитель Kingston UV500 120GB SUV500MS/120G', 90, '120', '<p>Интерфейсы mSATA, SATA 3.0, контроллер Marvell 88SS1074, микросхемы 3D TLC NAND, последовательный доступ: 520/320 MBps, случайный доступ: 79000/18000 IOps</p>\r\n\r\n<div>\r\n<h3>Описание</h3>\r\n</div>\r\n\r\n<div>\r\n<div>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td colspan=\"2\">\r\n			<div>Общая информация</div>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Дата выхода на рынок</td>\r\n			<td>2018&nbsp;г.</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td colspan=\"2\">\r\n			<div>Основные</div>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Объём</td>\r\n			<td>120 ГБ</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Форм-фактор</td>\r\n			<td>mSATA</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Интерфейс</td>\r\n			<td>SATA 3.0</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Тип микросхем Flash</td>\r\n			<td>3D TLC NAND</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Контроллер</td>\r\n			<td>Marvell 88SS1074</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td colspan=\"2\">\r\n			<div>Технические характеристики</div>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Аппаратное шифрование</td>\r\n			<td>AES 256bit</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Скорость последовательного чтения</td>\r\n			<td>520&nbsp;МБ/с</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Скорость последовательной записи</td>\r\n			<td>320&nbsp;МБ/с</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Средняя скорость случайного чтения</td>\r\n			<td>79 000&nbsp;IOps</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Средняя скорость случайной записи</td>\r\n			<td>18 000&nbsp;IOps</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Энергопотребление (чтение/запись)</td>\r\n			<td>2.32&nbsp;Вт &nbsp;(макс.)</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Энергопотребление (ожидание)</td>\r\n			<td>0.195&nbsp;Вт</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Время наработки на отказ (МТBF)</td>\r\n			<td>1 000 000&nbsp;ч</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Толщина</td>\r\n			<td>4.85&nbsp;мм</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td colspan=\"2\">\r\n			<div>Комплектация</div>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Комплект поставки</td>\r\n			<td>отдельный накопитель</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Адаптер 3.5&quot;</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n', '754451807308.jpeg', '320-754451807308.jpeg'),
(3, 'Оперативная память 1 ГБ', 20, '50', '<p>Планка оперативной памяти стандарта DDR3, ёмкость 1ГБ, PC3-10600.</p>\r\n', '451087932005.jpg', '320-451087932005.jpg'),
(4, 'Наушники Ginzzu GM-571BT S5', 90, '', '<p><strong>Ginzzu GM-571BT S5 - </strong>беспроводные наушники с микрофоном, портативные, складные, оформление закрытое, излучатель 40 мм, 20-20000 Гц, 32 Ом, кабель 1.2 м, расстояние 10 м.</p>\r\n\r\n<div>\r\n<h3>Описание</h3>\r\n</div>\r\n\r\n<div>\r\n<div>\r\n<table>\r\n	<tbody>\r\n		<tr>\r\n			<td colspan=\"2\">\r\n			<div>Общая информация</div>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Назначение</td>\r\n			<td>портативные</td>\r\n		</tr>\r\n	</tbody>\r\n	<tbody>\r\n		<tr>\r\n			<td colspan=\"2\">\r\n			<div>Основные</div>\r\n			</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Тип</td>\r\n			<td>наушники с микрофоном</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Конструкция</td>\r\n			<td>накладные</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Акустическое оформление</td>\r\n			<td>закрытое</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Беспроводной интерфейс</td>\r\n			<td>Bluetooth</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Тип беспроводных наушников</td>\r\n			<td>съёмный аудиокабель</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Пыле-, влаго-, ударопрочность</td>\r\n			<td>&nbsp;</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Материал корпуса</td>\r\n			<td>пластик, металл</td>\r\n		</tr>\r\n		<tr>\r\n			<td>Цвет</td>\r\n			<td>черный</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n</div>\r\n</div>\r\n', '119185909550.jpeg', '320-119185909550.jpeg');

-- --------------------------------------------------------

--
-- Table structure for table `jobs`
--

CREATE TABLE `jobs` (
  `id` int(11) NOT NULL,
  `period` varchar(191) DEFAULT NULL,
  `title` varchar(191) DEFAULT NULL,
  `description` varchar(191) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `jobs`
--

INSERT INTO `jobs` (`id`, `period`, `title`, `description`) VALUES
(2, 'Август 2005 &mdash; сентябрь 2007', 'Учитель', 'Учитель физики и информатики в общеобразовательной школе.'),
(7, 'Октябрь 2007 &mdash; настоящее время', 'Системный администратор', 'Настройка и поддержка сервисов локальной вычислительной сети учреждения.');

-- --------------------------------------------------------

--
-- Table structure for table `messages`
--

CREATE TABLE `messages` (
  `id` int(11) UNSIGNED NOT NULL,
  `email` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `name` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `message` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `message_file_name_original` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `message_file` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `date_time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `messages`
--

INSERT INTO `messages` (`id`, `email`, `name`, `message`, `message_file_name_original`, `message_file`, `date_time`) VALUES
(27, 'foo@uac.com', 'Роман', 'Предложение', '27_vipusk.pdf', '559959857993.pdf', '2019-02-13 22:00:14'),
(28, 'foo@tut.by', 'Егор', 'Отзыв', 'Как улучшить зрение 9 упражнений.docx', '791869768939.docx', '2019-02-13 22:05:41'),
(29, 'mail@mail.ru', 'Дельгардо', 'Priva', 'Что позволяет себе этот RedBean.png', '159212819300.png', '2019-02-13 22:08:25');

-- --------------------------------------------------------

--
-- Table structure for table `orders`
--

CREATE TABLE `orders` (
  `id` int(11) UNSIGNED NOT NULL,
  `name` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `surname` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `email` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `phone` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `address` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `items` text COLLATE utf8mb4_unicode_520_ci,
  `user_id` int(11) UNSIGNED DEFAULT NULL,
  `items_count` int(11) UNSIGNED DEFAULT NULL,
  `total_price` int(11) UNSIGNED DEFAULT NULL,
  `status` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `payment` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `date_time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `orders`
--

INSERT INTO `orders` (`id`, `name`, `surname`, `email`, `phone`, `address`, `items`, `user_id`, `items_count`, `total_price`, `status`, `payment`, `date_time`) VALUES
(1, 'Сергей', 'Григорович', 'info@uac.com', '555-55-55', '', '[{\"id\":\"1\",\"price\":\"90\",\"count\":1,\"title\":\"SSD-\\u043d\\u0430\\u043a\\u043e\\u043f\\u0438\\u0442\\u0435\\u043b\\u044c Kingston UV500 120GB SUV500MS\\/120G\"},{\"id\":\"3\",\"price\":\"20\",\"count\":2,\"title\":\"\\u041e\\u043f\\u0435\\u0440\\u0430\\u0442\\u0438\\u0432\\u043d\\u0430\\u044f \\u043f\\u0430\\u043c\\u044f\\u0442\\u044c 1 \\u0413\\u0411\"}]', 1, 3, 130, 'new', 'no', '2019-02-22 22:04:34'),
(2, 'Сергей', 'Григорович', 'info@uac.com', '555-55-55', 'Березино, ул. Октябрьская', '[{\"id\":\"1\",\"price\":\"90\",\"count\":1,\"title\":\"SSD-\\u043d\\u0430\\u043a\\u043e\\u043f\\u0438\\u0442\\u0435\\u043b\\u044c Kingston UV500 120GB SUV500MS\\/120G\"}]', 1, 1, 90, 'new', 'no', '2019-02-22 22:19:42'),
(3, 'Николай', 'Троекуров', 'info3@uac.com', '555-55-55', 'Россия, Кистенёвка', '[{\"id\":\"1\",\"price\":\"90\",\"count\":2,\"title\":\"SSD-\\u043d\\u0430\\u043a\\u043e\\u043f\\u0438\\u0442\\u0435\\u043b\\u044c Kingston UV500 120GB SUV500MS\\/120G\"},{\"id\":\"4\",\"price\":\"90\",\"count\":1,\"title\":\"\\u041d\\u0430\\u0443\\u0448\\u043d\\u0438\\u043a\\u0438 Ginzzu GM-571BT S5\"}]', 19, 3, 270, 'new', 'no', '2019-02-22 23:13:13');

-- --------------------------------------------------------

--
-- Table structure for table `posts`
--

CREATE TABLE `posts` (
  `id` int(11) UNSIGNED NOT NULL,
  `title` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `text` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci,
  `author_id` int(11) UNSIGNED DEFAULT NULL,
  `date_time` datetime DEFAULT NULL,
  `post_img` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `post_img_small` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `cat` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `update_time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `posts`
--

INSERT INTO `posts` (`id`, `title`, `text`, `author_id`, `date_time`, `post_img`, `post_img_small`, `cat`, `update_time`) VALUES
(28, '5 правил редизайна сайта', '<p>Интернет-технологии обновляются очень часто, вопрос редизайна сайта становится актуальным через каждые 2-3 года. Нужно идти в ногу со временем, чтобы оставаться интересным и полезным ресурсом для своей аудитории. Появляются новые возможности и новый функционал, который необходимо добавлять на сайт. Что нужно сделать, чтобы правильно подойти к процессу редизайна сайта?</p>\r\n\r\n<div><strong>Рекомендации веб-студии Mad Design.</strong></div>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Проанализируйте существующий сайт Прежде чем перейти к модернизации интернет-проекта проведите полноценный анализ сайта с технической стороны. Сделайте анализ коммерческих факторов, чтобы выяснить основные проблемные места сайта, которые требуют доработки. Основные акценты при проверке сайта: Через системы аналитики, панели вебмастеров в Яндексе и Google и сторонних сервисов проведите техаудит сайта на наличие технических ошибок, требующих вашего внимания и решения Есть ли адаптивная верстка на сайте под мобильные устройства Обязательно проверьте скорость загрузки сайта Навигация. Используются у вас на сайте различные варианты &quot;меню&quot; (сверху, сбоку, снизу, меню-крошки, висячая навигация при прокрутке сайта вниз). Соответствует существующая структура сайта потребностям ваших пользователей? Есть ли на сайте разные варианты обртаной связи? Есть ли разнообразие представленного контента на сайте? Не только текст, но и иллюстрации, схемы, видео, фото, инфографика? открытость и доступность информации о вашей компании: описание деятельности компании, информация по клиентам, партнерам, отзывы, актуальные новости, полезные материалы, портфолио, выполненные проекты, электронная почта на домене и пр? Важно в процессе редизайна не просто сделать все по-новому, а сделать удобнее, понятнее и полезнее для пользователей, чем было.</p>\r\n	</li>\r\n	<li>\r\n	<p>Проанализируйте ваших конкурентов Среди них есть сайты, которые уже подверглись модернизации и редизайну. Они выглядят современнее и интереснее, чем ваш ресурс. Сделайте таблицу основных коммерческих факторов и сравните свой сайт, и сайты ваших ближайших конкурентов. Таблица наглядно покажет, где вы лучше, а где отстаете. На сайтах ваших конкурентов всегда обращайте внимание на общее оформление дизайна. Удобно сайтом пользоваться с мобильного устройства или нет. Какие новые технические решения реализованы на сайте. Как реализованы определенные типовые блоки информации или контактов, как представлен контент, отзывы, есть ли видеообзоры. Как и какие иллюстрации используют, какие есть акции, спецпредложения и пр.</p>\r\n	</li>\r\n	<li>\r\n	<p>В новый сайт с обновленным фирменным стилем Если затеяли &laquo;ремонт&raquo; сайта, то подумайте, как можно обновить логотип и фирменный стиль компании. Как правило, в дизайне тоже происходят обновления раз в 2-3 года, современные каноны оформления будут диктовать новые варианты использования графики и шрифтов. Стоит подключить дизайнера и проработать заново основные элементы фирменного стиля &mdash; логотип, слоган, шрифты, иконки, иллюстрации.</p>\r\n	</li>\r\n	<li>\r\n	<p>Обратите внимание на контент Обновлению подвергается не только функционал и внешний вид ресурса, но и контент. К редизайну сайта стоит &laquo;подключить&raquo; и проработку контента. Наверняка часть текстов на сайте уже будут давно не уникальны (&laquo;сворованы&raquo; другими ресурсами), появились новые поисковые запросы, которые не учтены в вашем контенте. В результате изменений в структуре могут понадобиться новые разделы, страницы, для которых необходимо подготовить контент с нуля. Сейчас все больше требований к уникальности контента и фотографий. Если вы размещали иллюстрации и фотографии, взятые с бесплатных фотостоков, то стоит изменить данную тенденцию и переходить на создание собственного уникального фотоконтента. Это позволит и поисковым системам, и вашим пользователям больше &laquo;зауважать&raquo; ваш ресурс.</p>\r\n	</li>\r\n	<li>\r\n	<p>Тестируйте гипотезы Сложно сразу сделать все идеально и правильно. Часто разработка нового функционала, смена фирменного стиля, контента требуют тестирования на реальной целевой аудитории, чтобы убедиться, что новшества приносят пользу и вашему ресурсу, и пользователям. Либо наоборот, изменения будут неудобны и неприняты вашими потенциальными клиентами. После внедрения серьезных изменений на сайт, каждый день старайтесь в системах статистики анализировать поведение пользователей. Можно собрать мнение аудитории через опросы на сайте, чтобы понять насколько новый сайт выполняет возложенные на него функции и задачи.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p><em>Команда веб-студии Mad Design благодарит вас за проявленный интерес к данной статье.</em></p>', 1, '2019-02-05 23:54:11', '159346585998.jpg', NULL, '3', '2019-02-10 22:47:25'),
(29, 'Как ускорить создание сайта, перевернув с ног на голову процесс его разработки', '<p>И не просто ускорить, а задать его потенциальную эффективность сразу. Проще говоря &ndash; грамотно решить маркетинговую задачу, от которой почти на 80% зависит успешность сайта. Когда она выполняется правильно на старте, остальные 20% идут легко и быстро, как нож по маслу.</p>\r\n\r\n<p>Содержание этой статьи не относится к интернет-магазинам. Но полностью справедливо для других продающих продуктовых сайтов.</p>\r\n\r\n<p>Для начала надо бы разобраться, что следует понимать под &laquo;продающим сайтом&raquo;. Кто-то скажет, что это лендинг, кто-то &ndash; что это ресурс, обладающий возможностью принимать деньги. Но я не сомневаюсь, что найдутся и понимающие глагол &laquo;продавать&raquo; в его широком маркетинговом смысле: продавать и в итоге продать &ndash; убедить потенциального покупателя в ценности продуктового предложения и подтолкнуть его к совершению нужных владельцу сайта действий. Возможно, что появилось справедливое, на первый взгляд, возражение: каких-таких действий, если и так ясно, что от потенциального покупателя требуется одно &ndash; деньги. В большинстве случаев так оно и есть. Но иногда для извлечения выгоды в долгосрочной перспективе приходится продавать нажатие на кнопку. Когда мы предлагаем на лендинге воспользоваться опцией &laquo;заказать обратный звонок&raquo;, мы продаем именно действие, чтобы получить лида. И уже задачей взявшего трубку менеджера является грамотно его &laquo;дожать&raquo; и превратить в покупателя или клиента.</p>\r\n\r\n<p>В моей практике были и более экзотические случаи продажи с закрытием на действие. Нужно было убедить потенциальных работников одной добывающей компании в её надежности и привлекательности как работодателя. И задача эта решалась посредством многостраничного сайта. Хотя, справедливости ради, соглашусь, что подобные случаи &ndash; скорее, исключение. В целом же все гораздо приземленней &ndash; заказчику нужен сайт, чтобы с его помощью зарабатывать деньги. Но целевые посетители сайта расстанутся с ними только в том случае, если после знакомства с ним убедятся, что его предложение действительно является для них ценным. Следовательно, продающим является тот сайт, который убеждает в ценности и выгоде своего предложения и конвертирует посетителей в покупателей и клиентов.</p>\r\n\r\n<p>Обращаясь за разработкой сайта в агентство, веб-студию или к &laquo;свободному художнику&raquo;, заказчик мечтает именно о таком ресурсе. И редкой удачей является ситуация, когда он по совместительству &ndash; ас в продажах и говорит что-то вроде: &laquo;Вы сделайте, чтобы оно все хорошо фурычило, а на страницах разместите вот это, это и это&raquo;. Чаще же всего заказчик ожидает, что всю работу, связанную с продажами, сделают за него. И столь же часто он не знает, как оценить продающую способность готового ресурса. Однако от точки старта до сдачи проекта расстояние длинное. И на всех этапах разработки он, мягко говоря, &laquo;парит мозг&raquo;. Почему &ndash; да просто потому что находится в крайне дискомфортной для себя ситуации полнейшей неопределенности. Деньги он заплатил, а все ли &laquo;правильно&raquo; ему делают &ndash; не понимает.</p>\r\n\r\n<p>После того как заказчик наконец-таки заполнил высланный ему бриф, начинается работа над структурой ресурса, интерфейсом и прочими важными вещами. И, разумеется, заказчик в процессе всего этого обычно участвует &ndash; по завершении очередного этапа он его результат в конце концов, скрепя сердце, утверждает. Почему &laquo;скрепя сердце&raquo; - да потому что ему вначале предъявляются графические схемы с кружочками и квадратиками. И как все это выльется в удовлетворяющий его результат, он представляет довольно слабо. Отсюда и разные сомнения, просьбы &laquo;переделать&raquo; и прочее, что, естественно, любого разработчика раздражает. Однако до всего этого ещё добраться надо.</p>\r\n\r\n<p>Перед тем как приступать к разработке сайта, надо разобраться в бизнесе и продуктовом предложении заказчика. В подавляющем большинстве случаев делается это с помощью брифа. И чем качественней (полнее) составлен бриф, тем сложнее заказчику его заполнить. Почему &ndash; да просто бриф вынуждает заказчика озадачиться тем, чем он, возможно, и не занимался. То есть взглянуть на свой продукт и бизнес &laquo;сверху&raquo; и изнутри. А это требует неслабых маркетинговых компетенций. Особенно часто заказчик виснет над вопросом &laquo;В чем ваше УТП?&raquo;. Не знаю как вам, но мне без него ещё не встречалось &laquo;слепых&raquo; брифов.</p>\r\n\r\n<p>Но вернувшийся от заказчика заполненный &laquo;слепой&raquo; бриф ещё не гарантия, что весь его бизнес с индивидуальными особенностями бизнес-процессов и продуктов будет как на ладони. Зачастую приходится беспокоить заказчика не раз и не два, что его, естественно, нервирует и тормозит работу над проектом. Можно ли вообще обойтись без брифа? Без &laquo;слепого&raquo; - вполне. Вообще без брифа &ndash; нет, потому что он является не только источником информации, но и защищающим исполнителя документом. От утвержденного самим же заказчиком ему впоследствии отказаться трудно. В числе постоянных клиентов у меня есть ребята-разработчики, с которыми мы изначально отказались от предоставления заказчикам &laquo;слепых&raquo; брифов.</p>\r\n\r\n<p>Суть бизнеса и продуктового предложения &laquo;вскрывается&raquo; мной в комфортной для заказчика обстановке. А затем полученная информация трансформируется в бриф, но уже заполненный на 70%. И там нет вопросов, способных ввести человека в ступор. Заказчик уже видит свой бизнес с его нюансами. С чем-то он просто соглашается, а что-то ему надо дополнить. Вопросы, которые в этом брифе ставятся, позволяют ненавязчиво все преимущества продукта определить и наметить пути отстройки от конкурентов. Получив такой бриф, заказчик уже становится спокойней. Он видит, что с ним союзники, стремящиеся достойно решить задачу.</p>\r\n\r\n<p>Но до недавнего времени трудности возникали уже на нашей стороне. Почему &ndash; да просто работая по традиционной схеме, мы сталкивались с необходимостью неоднократно перекраивать дизайн и в первую очередь &ndash; главной страницы сайта. Напомню, что конечная цель разработчиков &ndash; отдать заказчику сайт, который будет превращать его посетителей в покупателей. И чтобы ресурс решал эту задачу, он должен ответить на вопросы, всплывающие в голове посетителя при знакомстве с сайтом: - в чем ценность - а вдруг я что-то нужное упускаю &hellip; - что получит &ndash; и что я с этого поимею? - почему ваш продукт &ndash; на этом что, свет белый клином сошелся? - почему он может доверять &ndash; а вдруг меня разводят? - почему у вас - да я такое стопятьсот раз уже видел! - почему стоит решиться быстрее &ndash; надо обдумать хорошенько ...</p>\r\n\r\n<h3>Как быть, если нужен лендинг</h3>\r\n\r\n<p>Когда речь идет о лендинге, то спровоцировать посетителя на действие хочешь-не хочешь, а надо с помощью всего лишь одной страницы. Именно поэтому продающий лендинг (а не шаблонная, вызывающая отторжение портянка) &ndash; самый сложный в маркетинговом плане вид сайта. Текста на нем должно быть минимум, &laquo;говорящими&raquo; являются даже знаки препинания. Продающая способность обеспечивается органичным взаимодействием слов и графики, которые усиливают и дополняют друг друга. При разработке лендинга я вначале делаю продающий макет. То есть страницу, на которой уже взаимоувязаны графические и текстовые элементы. При таком подходе договориться с клиентом гораздо проще. Его внимание не рассеивается между качеством подачи оффера, аргументами, доводами, оформлением шрифта и картинками. Заказчику сразу предлагается оценить продающую способность лендинга без отвлечения на сопровождающие детали. Он видит, что, к примеру, иллюстрационным дополнением к этой СТА-кнопке будет мужчина, транслирующий ключевую компетентность бизнеса, а не смазливая девица. И с этим изначально соглашается. А если не понимает, почему нужен именно такой дядька &ndash; ему объясняют. После этого работа над лендингом с моей стороны заканчивается, а у моих клиентов процесс его дальнейшей разработки существенно сокращается, да и стоит нередко дешевле.</p>\r\n\r\n<p>Продающий макет лендинга &ndash; своего рода ТЗ для дизайнера. Ему уже не надо детально вникать в суть бизнеса и продуктового предложения и продумывать сценарий графической подачи. На макете уже есть все, что ему надо. Он знает, какие моменты следует подавать стилистически одинаково, каким должно быть содержание иконок, какие нужны иллюстрации. Все, что ему остается &ndash; довести это &laquo;до ума&raquo;, подобрать шрифты и продумать цветовую схему. Для выполнения этой работы нужен хороший специалист, но избыточен высококлассный дизайнер. Стоимость одного и другого нетрудно представить.</p>\r\n\r\n<h3>Что делать в случае многостраничного сайта</h3>\r\n\r\n<p>Счастлив тот заказчик, которому для решения своей бизнес-задачи достаточно сайта-визитки. Но этот случай нынче настолько редкий, что чаще приходится говорить о многостраничном сайте. Если продукт высококонкурентный или отличается повышенной сложностью, простой презентации недостаточно. Требуется отработка возражений и понижение барьеров, препятствующих приобретению продукта.</p>\r\n\r\n<p>Источников таких ментальных барьеров может быть не один-два, а гораздо больше. Они возникают в результате:</p>\r\n\r\n<ul>\r\n	<li>завышенных ожиданий</li>\r\n	<li>искаженных представлений</li>\r\n	<li>слабой осведомленности</li>\r\n	<li>неосознанной ценности</li>\r\n	<li>негативного опыта использования</li>\r\n	<li>наличия опасений, страхов и переживаний.</li>\r\n</ul>\r\n\r\n<p>Для снятия или снижения барьеров применяется отдельный вид продающего контента &ndash; информационно-вовлекающие материалы. Подаваться они могут в каком угодно формате &ndash; текстовом или видео, но для успешных продаж обязательно должны быть на сайте. При традиционном подходе к разработке сайта такой раздел обычно предусматривается, а затем заполняется статьями. Впоследствии страницы с ними становятся точками входа при партизанском продвижении, а также из поисковых систем по СЧ и НЧ запросам. Однако Главная страница является лицом сайта. Именно её адрес заказчик указывает на своих промо-материалах.</p>\r\n\r\n<p>При подходе к разработке сайта &laquo;с ног на голову&raquo;, о котором я сейчас рассказываю, продающую способность ресурса можно задать и усилить изначально. При этом, как и в случае с лендингом, заказчик уже в самом начале получит уверенность, что заказанный им сайт будет эффективно решать стоящую перед ним задачу. Вначале все происходит так, как было описано выше: из заказчика извлекается информация, упаковывается в почти полностью заполненный бриф и возвращается ему на доработку. А после получения брифа обратно решается вопрос &ndash; как распорядиться полученной информацией и убрать те самые барьеры, которые способны помешать продаже. Самые опасные барьеры целесообразно отработать сразу, зарезервировав продающие анонсы под них на Главной сайта. Зачастую срок принятия решения о покупке длительный. Причем как в В2С, так и В2В сегменте. Причины в зависимости от сегмента могут быть разными. Но задача стоит одна и та же &ndash; пока посетитель не принял окончательного решения, ему нельзя позволить расстаться с сайтом. Давным-давно эту задачу пытались решать фразами типа &laquo;сохраните наш сайт в закладках&raquo; или &laquo;добавьте в избранное&raquo;. Насколько успешно &ndash; не знаю, но думаю, что такой способ сегодня уже работать не станет.</p>\r\n\r\n<p>Посетитель должен сам захотеть возвращаться на сайт. Благодаря чему? Ну конечно же, познавательно-ценным для него или развлекающим материалам. Назовем их контентом &laquo;Вау!&raquo;. И то, что такой контент на сайте присутствует, посетителю надо показать сразу. Причем не только с помощью раздела меню, но и анонсов на Главной.</p>\r\n\r\n<p>Вопрос завоевания доверия посетителя при продаже едва ли не самый важный. Эта задача решается с помощью страницы &laquo;О нас&raquo;. И чтобы посетитель зашел на неё наверняка, тизерный анонс полезно разместить в теле Главной.</p>\r\n\r\n<p>Не менее важна и отстройка от конкурентов. Более чем вероятно, что для этого потребуется не одна, а несколько статей, поскольку не меньшую опасность могут представлять непрямые конкуренты. Если коротко, то они могут быть &laquo;по форме&raquo;, &laquo;финансовые&raquo;, &laquo;по восприятию&raquo; и &laquo;провокаторы&raquo;. Их надо выявить, и анонсы на статьи с отстройкой от самых опасных дать на Главной. Презентация продуктов (в разрезе каждого или по группам) также должна быть на Главной с выходом на страницы, где информация о них дается полностью. Возможно, что кто-то сейчас не просек фишку и недоумевает &ndash; подумаешь, пуговицу нашла. Примерно так и выглядит любая Главная сайта! Разумеется, так и есть. Но какой ценой?! После нервотрепки, десятков согласований и прочего.</p>\r\n\r\n<p>В излагаемом мной подходе разница есть, и существенная: на этом этапе не вовлекается ни один специалист из команды разработчиков. Архитектуру Главной вначале готовлю я и согласовываю с заказчиком сайта. Он видит, а главное, понимает продающую способность своего ресурса. Ощущает направления для его развития, если оно важно.</p>\r\n\r\n<p>На согласование отдается страница примерно такого вида: Контент-макет Главной страницы будущего сайта консультанта по формированию личного визуального имиджа Елена Рыжкова После того как заказчик её утверждает, она становится основой для разработки структуры сайта. На этом контентном макете Главной уже сделаны продающие анонсы-подводки к продуктовым презентациям и статьям и разделам, устраняющим барьеры, препятствующие продажам. Вполне понятно, что дизайнер и верстальщик могут увидеть возможности к улучшению визуальной подачи. Пока разрабатывается структура ресурса и готовится контентный план со стратегией, они создают и согласовывают с Заказчиком улучшенный макет Главной.</p>\r\n\r\n<p>Описанный мной формат работы близок, безусловно, к идеальному. На практике же заказчику приходится что-то иногда объяснять и доказывать. Однако вся эта нервотрепка остается для команды разработчиков &laquo;за кадром&raquo;. От меня они принимают заказчика уже потенциально лояльного к их последующей деятельности. Свое участие в работе над сайтом-многостраничником я называю &laquo;Разработка архетипа сайта&raquo;. Некоторых это название забавляет. Но если вспомнить, что с греческого &laquo;архетип&raquo; переводится как &laquo;первообраз&raquo;, то точнее вряд ли скажешь.</p>\r\n\r\n<p>После того как готов архетип сайта в виде контент-макета Главной, структуры ресурса и контентной стратегии с планом, мое участие в разработке может быть закончено. Все ключевые моменты, необходимые для конвертации целевых посетителей в покупателей и клиентов заданы. Разумеется, достигнутый результат можно испортить некачественным контентом, и при стремлении сэкономить заказчик должен понимать эти риски. С теми, кто это понимает, работа с моей стороны продолжается в виде разработки продающих и вовлекающих текстов. Если все-таки есть необходимость экономии на копирайтинге, под контентную стратегию пишу ТЗ для копирайтеров, в котором ставится задача по текстам.</p>', 1, '2019-02-05 23:56:43', '159346585998.jpg', '320-159346585998.jpg', '3', '2019-02-18 12:22:14'),
(30, 'Подробная инструкция для разработчиков по подготовке к собеседованию', '<h3>Интервью с разработчиками - часть нашей повседневной работы в Rubrain.com.</h3>\r\n\r\n<p>Поэтому мы отлично знаем, как некоторым талантливым программистам сложно одновременно расслабиться психологически, но оставаться сконцентрированными на решении профессиональных задач, которые ставит интервьюер. Чаще всего это происходит из-за недостаточной уверенности в собственных знаниях и страха неожиданных вопросов и задач, которые могут поставить в тупик.</p>\r\n\r\n<p>Чтобы разработчики чувствовали себя уверенно на собеседовании в любой организации (будь то небольшой стартап или крупный всемирно известный проект IT-сферы), мы нашли и перевели для вас исчерпывающую инструкцию по подготовке к &ldquo;coding interview&rdquo;. Автор статьи, Ариэль Камю - основатель Microverse, удаленной школы разработчиков ПО, которая базируется в Сан-Франциско и бесплатна для всех учеников, которые пока не нашли работу. С оригиналом статьи можно ознакомиться по ссылке <a href=\"https://medium.freecodecamp.org/the-ultimate-guide-to-preparing-for-the-coding-interview-183251ee36c9\" target=\"_blank\">https://medium.freecodecamp.org/the-ultimate-guide-to-preparing-for-the-coding-interview-183251ee36c9</a></p>\r\n\r\n<p>В заданиях статьи автор несколько раз ссылается на книгу Gayle Laakmann McDowell&rsquo;s &ldquo;Cracking the Coding Interview&rdquo;. Издание на русском языке можно найти в интернете под названием &laquo;Карьера программиста. Как устроиться на работу в Google, Microsoft или другую ведущую IT-компанию&raquo;. В этой статье вы найдете все, что вам нужно, чтобы быть готовым к техническим собеседованиям, поведенческим вопросам и переговорам о зарплате.</p>\r\n\r\n<p>У каждой компании есть свой способ собеседования с кандидатами, и вы должны быть готовы ко всем возможным вариантам. Чем меньше компания, тем проще структура собеседований. Небольшие фирмы и стартапы, как правило, проводят 1-2 собеседования (интерактивные собеседования с помощью таких инструментов, как Сodepen и IDE, или whiteboard interview (когда перед кандидатом ставят маркерную доску или дают лист бумаги и просят написать код на них) или дают небольшой проект, который вы должны будете выполнить самостоятельно.</p>\r\n\r\n<p>Крупные компании, такие как Google или Facebook, начинают с телефонных собеседований с менеджером по персоналу и техническими специалистами (где вы выполняете задания по написанию кода), после чего переходят уже к очным собеседованиям.</p>\r\n\r\n<h3>Задание № 1:</h3>\r\n\r\n<p>прочитайте раздел &laquo;Форматы собеседования&raquo; (<a href=\"https://github.com/yangshun/tech-interview-handbook/blob/master/non-technical/interview-formats.md\" target=\"_blank\">https://github.com/yangshun/tech-interview-handbook/blob/master/non-technical/interview-formats.md</a>) в &laquo;Руководстве по техническому собеседованию&raquo;, созданном сотрудником Facebook Яншуном Тэем, чтобы понять, как разные компании структурируют свои собеседования. Независимо от структуры и количества собеседований, вы должны быть готовы к следующим типам вопросов:</p>\r\n\r\n<ul>\r\n	<li>Технические вопросы</li>\r\n	<li>Проектирование систем</li>\r\n	<li>Поведенческие вопросы</li>\r\n</ul>\r\n\r\n<p>Давайте рассмотрим каждый тип вопросов и определим основные цели, которые вы должны достичь, чтобы преуспеть на собеседовании.</p>\r\n\r\n<h4>Технические вопросы</h4>\r\n\r\n<p>Технические задания могут касаться структур данных и алгоритмов или конкретных технологий, языков и систем, используемых в компании, куда вы устраиваетесь. А значит вы уже должны быть знакомы с такими платформами, как Hackerrank, Learneroo и Leetcode, изучить структуры данных и алгоритмы. Даже в процессе поиска работы продолжайте ежедневно практиковаться с Leetcode (подробнее об этом позже). Имейте в виду, что вас могут попросить выполнить технические задания, используя последнюю версию IDE или другой интерактивный инструмент, позволяющий запустить код, в Google Doc или маркерной доске, где вам нужно будет писать код без особых подсказок. Вы должны быть готовы к самым разным задачам. Когда дело касается конкретных технологий, языков и систем, у вас должен быть хороший опыт в том стеке, который вы для себя выбрали. В Microverse, школе для удаленных разработчиков программного обеспечения, которая бесплатна до тех пор, пока вы не устроитесь на работу, мы преподаем Ruby, Ruby on Rails, JavaScript и React, но на самом деле, не имеет значения, что вы выберете, пока вы не разберетесь в конкретном стеке и не станете действительно хороши в нем. Я буду исходить из того, что вы уже владеете своим стеком и умеете создавать с его помощью проекты. Далее мы будем также использовать книгу Gayle Laakmann McDowell&rsquo;s &ldquo;Cracking the Coding Interview&rdquo;. Если у вас еще нет такой книги, я настоятельно рекомендую ее купить или попытаться найти в местной библиотеке.</p>\r\n\r\n<h3>Задание № 2:</h3>\r\n\r\n<p>прочитайте VI раздел книги &ldquo;Cracking the Coding Interview&rdquo;, который называется &laquo;Технические вопросы&raquo;.</p>\r\n\r\n<h3>Задание № 3:</h3>\r\n\r\n<p>чтобы освежить информацию о структурах данных и алгоритмах, выполните ТОЛЬКО первое задание по кодированию в каждом разделе (т.е. матрица, динамическое программирование, геометрия, графика, хэш-таблица и т. д.) этой страницы - <a href=\"https://github.com/yangshun/tech-interview-handbook/tree/master/algorithms\" target=\"_blank\">https://github.com/yangshun/tech-interview-handbook/tree/master/algorithms</a>, используя выбранный вами язык. Вы будете использовать новую платформу под названием Leetcode.</p>\r\n\r\n<p>На странице &laquo;<em>Руководства по техническому собеседованию</em>&raquo; также содержится обзор каждой структуры данных или алгоритма на случай, если вам понадобятся подсказки. Прочитайте его, прежде чем пытаться выполнить задание по кодированию.</p>\r\n\r\n<h3>Задание № 4:</h3>\r\n\r\n<p>найдите ресурсы, на которых вы сможете проверить себя в наиболее распространенных концептуальных вопросах о различных технологиях, которые вы знаете. Если вы не разбираетесь в каком-то направлении, используйте Google и изучите этот вопрос, прежде чем пытаться найти решение.</p>\r\n\r\n<p>Вот несколько примеров &laquo;концептуальных вопросов&raquo; для разных языков программирования, которые мы преподаем в Microverse. Если вы работаете на тех же языках, не стесняйтесь использовать эти ссылки. Также вы можете использовать эти сайты, чтобы понять, какие похожие ресурсы вам нужно найти в интернете. Имейте в виду, что концептуальные вопросы отличаются от заданий по программированию тем, что они более теоретичны, то есть вам не придется писать код, чтобы на них ответить (в большинстве случаев).</p>\r\n\r\n<p>Алгоритмы и структуры данных (максимум 45 минут) https://www.geeksforgeeks.org/commonly-asked-algorithm-interview-questions-set-1/ https://www.geeksforgeeks.org/commonly-asked-data-structure-interview-questions-set-1/</p>\r\n\r\n<ul>\r\n	<li>Ruby &amp; Rails (максимум 45 минут) https://www.toptal.com/ruby/interview-questions/ https://www.upwork.com/i/interview-questions/ruby/ https://rubygarage.org/blog/how-to-interview-your-ruby-on-rails-developer</li>\r\n	<li>HTML &amp; CSS (максимум 45 минут) https://github.com/yangshun/front-end-interview-handbook/blob/master/questions/css-questions.md https://github.com/yangshun/front-end-interview-handbook/blob/master/questions/html-questions.m</li>\r\n	<li>JavaScript (максимум 45 минут) https://www.toptal.com/javascript/interview-questions https://www.codementor.io/nihantanu/21-essential-javascript-tech-interview-practice-questions-answers-du107p62z https://github.com/yangshun/front-end-interview-handbook/blob/master/questions/javascript-questions.md</li>\r\n	<li>React (максимум 45 минут) https://www.edureka.co/blog/interview-questions/react-interview-questions/ https://www.toptal.com/react/interview-questions</li>\r\n</ul>\r\n\r\n<p>Чтобы не затягивать с этими заданиями, установите ограничение по времени в 45 минут для каждого набора вопросов. Не стесняйтесь предложить другу поработать над этими вопросами вместе. Вы можете отвечать по очереди и объяснять ответы друг другу. Не забывайте проводить тренировочные собеседования, чтобы подготовиться к реальным (подробнее об этом позже), и продолжать практиковаться в ответах на подобные вопросы даже в ходе поисков работы.</p>\r\n\r\n<h4>Задания по проектированию систем</h4>\r\n\r\n<p>В этих типах заданий наниматели представляют определенный продукт (например, социальную сеть, поисковую систему, генератор коротких ссылок), и просят вас спроектировать для него систему и архитектуру.</p>\r\n\r\n<p>Возможно, некоторые элементы проектирования вам уже знакомы - DNS-сервер, кэширование, распределитель нагрузки, базы данных и т. д. Однако даже опытные разработчики иногда путаются в этих вопросах. Вы не должны проектировать супер масштабируемую и совершенную систему. Ваш наниматель понимает, что вы начинающий разработчик, который, вероятно, никогда ранее не проектировал крупные промышленные системы. Этот тип проверки дает вам возможность показать, как вы справляетесь с крупными задачами. Вы можете задавать много вопросов, чтобы подтвердить свои предположения о системе, которую вам предстоит спроектировать, и обращаться за помощью к своему интервьюеру.</p>\r\n\r\n<p>Вот список заданий, которые вам необходимо выполнить, чтобы быть готовым к проектированию систем на собеседовании. Выполнение этих задач займет у вас время, но есть вероятность, что вам не будут давать подобных заданий на собеседовании, если вы откликаетесь на вакансии начального уровня. Тем не менее, вы сможете узнать много нового о реальном мире разработки программного обеспечения. Изучайте и наслаждайтесь, главное - сильно не углубляться! Просматривайте разные разделы и изучайте те, которые вам интересны.</p>\r\n\r\n<h3>Задание № 5:</h3>\r\n\r\n<p>прочитайте главу 9 книги &laquo;Cracking the Coding Interview&raquo;. Пожалуйста, прочитайте &laquo;Пример проблемы&raquo;, но пока не пытайтесь отвечать на &laquo;Вопросы собеседования&raquo;.</p>\r\n\r\n<h3>Задание № 6:</h3>\r\n\r\n<p>Донн Мартин, технический менеджер Facebook, создал еще один замечательный открытый ресурс, чтобы помочь людям готовиться к собеседованиям. Прочитайте раздел &laquo;Как подготовиться к вопросам по проектированию систем на собеседовании&raquo;. (<a href=\"https://github.com/donnemartin/system-design-primer #how-to-approach-a-system-design-interview-question\" target=\"_blank\">https://github.com/donnemartin/system-design-primer #how-to-approach-a-system-design-interview-question</a>). По этой ссылке в разделах 3 и 4 нужно найти компоненты, которые вы сможете использовать для проектирования своей системы, а затем подумать о том, как вы собираетесь ее масштабировать. Давайте рассмотрим основные компоненты и механизмы масштабируемости при проектировании любой системы.</p>\r\n\r\n<h3>Задание № 7:</h3>\r\n\r\n<p>прочитайте о четырех разных способах масштабирования системы:</p>\r\n\r\n<ul>\r\n	<li>Масштабируемость для чайников - Часть 1: Аналоги http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones</li>\r\n	<li>Масштабируемость для чайников - Часть 2: База данных http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database</li>\r\n	<li>Масштабируемость для чайников - Часть 3: Кэш http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache</li>\r\n	<li>Масштабируемость для чайников - Часть 4: Асинхроннность http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism</li>\r\n</ul>\r\n\r\n<h3>Задание № 8:</h3>\r\n\r\n<p>Прочитайте о различных компонентах каждой программной системы (вам не нужно разбираться во всех деталях, но вы должны знать о различных компонентах и концепциях):</p>\r\n\r\n<ul>\r\n	<li>Domain Name System (DNS) https://github.com/donnemartin/system-design-primer #domain-name-system Content Delivery Network (CDN) https://github.com/donnemartin/system-design-primer #content-delivery-network</li>\r\n	<li>Load Balancer https://github.com/donnemartin/system-design-primer #load-balancer</li>\r\n	<li>Reverse Proxy https://github.com/donnemartin/system-design-primer #reverse-proxy-web-server</li>\r\n	<li>Application layer https://github.com/donnemartin/system-design-primer #application-layer</li>\r\n	<li>Cache https://github.com/donnemartin/system-design-primer #cache</li>\r\n	<li>Asynchronism https://github.com/donnemartin/system-design-primer #asynchronism</li>\r\n	<li>Communication https://github.com/donnemartin/system-design-primer #communication</li>\r\n</ul>\r\n\r\n<h3>Задание № 9:</h3>\r\n\r\n<p>Выберите 2-3 компании, которые вам нравятся, из этого списка - <a href=\"https://github.com/donnemartin/system-design-primer#company-architectures\" target=\"_blank\">https://github.com/donnemartin/system-design-primer#company-architectures</a> и прочитайте об их архитектурах.</p>\r\n\r\n<h3>Задание № 10:</h3>\r\n\r\n<p>посмотрите ответы на следующие два вопроса проектирования: URL Shortener http://blog.gainlo.co/index.php/2016/03/08/system-design-interview-question-create-tinyurl-system/ Collaborative Editor http://blog.gainlo.co/index.php/2016/03/22/system-design-interview-question-how-to-design-google-docs/ Это подробные ответы, и они отлично подойдут для вакансий начального уровня. Если вам интересно, что ожидается от более опытных разработчиков, взгляните на этот более сложный ответ на вопрос о проектировании URL Shortener - https://github.com/donnemartin/system-design-primer/blob/master/solutions/system_design/pastebin/README.md</p>\r\n\r\n<h3>Задание № 11:</h3>\r\n\r\n<p>Выберите любые 2 вопроса из этого списка заданий по проектированию (https://github.com/yangshun/tech-interview-handbook/tree/master/design #specific-topics) и письменно или в любом текстовом редакторе попытайтесь ответить на них, как если бы вы были на настоящем собеседовании. Я рекомендую вам попробовать сделать это с другом или коллегой, чтобы вы могли помогать друг другу. Примечание: я советую вам выполнять задания с другом или коллегой, потому что некоторые из этих вопросов могут быть слишком сложными, да и сам процесс обучения очень непрост. Совместное обучение &ndash; основной принцип Microverse: у нас нет учителей и аудиторий, наши студенты распределяются в небольшие команды и занимаются совместным удаленным программированием. Как гласит шведская пословица: общая радость &mdash; это двойная радость, общее горе - половина горя. Поведенческие вопросы Компании не хотят просто нанимать хороших специалистов, им нужны люди, с которыми будет приятно работать и которые хорошо вписываются в коллектив. Поэтому на собеседовании интервьюер обязательно задаст вам некоторые поведенческие вопросы, например: &laquo;почему вы хотите у нас работать?&raquo; или &laquo;расскажите о проекте, в ходе которого вы столкнулись с проблемами и смогли успешно решить их&raquo;. Этот раздел предназначен для того, чтобы помочь вам легко ответить на любой из этих вопросов.</p>\r\n\r\n<h3>Задание № 12:</h3>\r\n\r\n<p>прочитайте раздел V книги &ldquo;Cracking the Coding Interview&raquo;, который называется &laquo;Поведенческие вопросы&raquo;.</p>\r\n\r\n<h3>Задание № 13:</h3>\r\n\r\n<p>с помощью Google Docs заполните &laquo;Таблицу для подготовки к собеседованию&raquo;, которая описана в книге. Идеально, если вы будете использовать в основном программные проекты, но, если есть какая-либо поведенческая ситуация, которая будет показательна (проявит ваши лидерские качества), добавьте этот непрограммный проект при заполнении таблицы.</p>\r\n\r\n<h3>Задание № 14:</h3>\r\n\r\n<p>следуя методологии SAR (Ситуация, Действие, Результат) и общим советам из книги, запишите и добавьте ответы на вопросы из книги (т. е. &laquo;слабые стороны&raquo; и &laquo;расскажите о себе&raquo;), а также все вопросы в разделе &laquo;Общие&raquo; этого списка (https://github.com/yangshun/tech-interview-handbook/blob/master/non-technical/behavioral.md) к документу Google из предыдущего задания. Поделитесь ссылкой на Google Docs с коллегами и друзьями и попросите их прокомментировать и оставить отзывы к вашим ответам - всегда полезно услышать мнение со стороны. Помните, что ваши ответы должны быть естественными! Другие вопросы Несмотря на то, что задания по проектированию, технические и поведенческие вопросы будут наиболее важной частью собеседований, важно помнить и о других нюансах, которые будут учитываться в ходе ваших собеседований. Вопросы, которые стоит задать Задавая правильные вопросы на собеседовании, вы не только будете выглядите умнее, но и познакомитесь с компанией и людьми, прежде чем принять какое-либо предложение. Собеседование &mdash; это двусторонний процесс, не забывайте это!</p>\r\n\r\n<h3>Задание № 15:</h3>\r\n\r\n<p>прочитайте вопросы из этого списка (https://github.com/yangshun/tech-interview-handbook/blob/master/non-technical/questions-to-ask.md) и используйте их на своих будущих собеседованиях. Психологические трюки Вот некоторые другие психологические советы, которые помогут вам расположить к себе нанимателя на собеседовании - https://github.com/yangshun/tech-interview-handbook/blob/master/non-technical/psychological-tricks.md. Советы по ведению переговоров Когда наступит долгожданный момент, и вы получите предложение о работе, помните, что вы всегда должны уметь договариваться. Вести переговоры &mdash; это искусство.</p>\r\n\r\n<h3>Задание № 16:</h3>\r\n\r\n<p>прочитайте эти 10 правил ведения переговоров и возвращайтесь к ним всякий раз, когда вам нужно договориться о работе - https://github.com/yangshun/tech-interview-handbook/blob/master/non-technical/negotiation.md. Обратите внимание - в двух верхних ссылках этой статьи - более подробное описание каждого из правил. Тренировочные собеседования Проводить тренировочные собеседования, прежде чем перейти к реальным, - отличная идея! Вы не только будете увереннее отвечать на наиболее распространенные вопросы, но и поймете, как справляться с нервами, чтобы чувствовать себя на собеседовании спокойно и сосредоточенно. Вот простая электронная таблица, которую мы используем для проведения тренировочных собеседований в Microverse: https://docs.google.com/spreadsheets/d/1t_228bDllazltWrq7WrLaKCs3dHXlGHBybWz9nnRvSc/edit #gid=2041017957. Наши студенты используют эту таблицу для проведения собеседований друг у друга. Большинство вопросов относятся к тому стеку, который мы преподаем, но вы можете найти друга или коллегу и попытаться создать для них аналогичный список вопросов, а затем попросить их сделать то же самое для вас. Вам нужно хорошо разбираться в том, о чем вы будете спрашивать своего друга, поэтому потратьте пару часов на подготовку к тренировочному собеседованию. Используйте Google, чтобы найти оптимальное решение или ответ на каждый вопрос (особенно вопросы кодирования). Так вы сможете направлять своего партнера, пока он не найдет верное решение. Примечание: мы также рекомендуем вам попробовать попрактиковаться в ответах, особенно поведенческих, перед зеркалом или с резиновым утенком (https://rubberduckdebugging.com/) перед тем, как проводить тренировочное собеседование. Есть две платформы, на которых мне нравится находить людей и проводить тренировочные собеседования. Возможно, вы тоже захотите попробовать: Pramp (https://www.pramp.com/#/) и Interviewing.io (https://interviewing.io/). Следуя нашему подробному руководству, вы сможете подготовиться к любому собеседованию на получение должности разработчика программного обеспечения. Выполняя все наши рекомендации, вы будете чувствовать себя уверенно, когда придете на собеседование</p>', 1, '2019-02-06 00:01:04', '159547653149.jpg', '320-159547653149.jpg', '3', '2019-02-18 11:43:49'),
(31, 'Лакшери-дизайн &mdash; дорого? Миф о стоимости дизайна', '<p>Действительно ли минималистичный дизайн кофейни дешевле, чем лакшери-дизайн с вензелями дорогого бутика?</p>\r\n\r\n<p>Разбирается дизайн-агентство &laquo;На Вынос&raquo;.</p>\r\n\r\n<p>Мы заметили миф у начинающих предпринимателей о том, что минималистичный логотип и фирменный стиль должен стоить дешевле, чем если бы он был более детализированным. Порой, у заказчика появляется чувство, что дизайнер &laquo;схалтурил&raquo; и специально выбрал простую графику, чтобы не заморачиваться. На первый взгляд, это логично: дизайнеру действительно нужно меньше времени провести в программе, чтобы сделать графически простой логотип, чем часами выписывать вензеля. С другой стороны, вы платите дизайнеру вовсе не за время и усилия, приложенные при &laquo;рисовании&raquo;.</p>\r\n\r\n<p>В чем заключается работа дизайнера, если не в &laquo;рисовании&raquo; в программах?</p>\r\n\r\n<p>Разберем аналогию: столяр пообещал сделать деревянный стул для вашей гостиной за неделю. Срок, цена и портфолио столяра вас устраивают, поэтому вы соглашаетесь. Скажите: вам важно, сколько &laquo;чистых&raquo; часов будет за работой этот столяр, если результат подойдет вашей гостиной и будет нравиться гостям? Научиться забивать гвозди и строгать рубанком деревянные детали проще, чем научиться понимать, как при этом получить хороший продукт, какой продукт можно считать хорошим и в какой ситуации, а тем более &mdash; научиться делать это на одинаково высоком уровне.</p>\r\n\r\n<p>На оттачивание мастерства уходят годы &mdash; именно за экспертность, вкус и видение платят как столяру, так и дизайнеру. У дизайнеров от среднего уровня и выше стоимость на фирменный стиль вообще не зависит от того, для кого и в каком стиле он разрабатывается.</p>\r\n\r\n<p>Если фиксированного тарифа на услугу нет &mdash; повод задуматься, не подстраивается ли дизайнер под заказчика. Мы встречали и &laquo;<em>С такой графикой буду явно дольше мучиться!</em>&raquo;, и &laquo;<em>У дорогого ресторана можно явно больше денег попросить!</em>&raquo; &mdash; такой подход нам не близок.</p>\r\n\r\n<p>Что делать, если появляется чувство, что дизайнер не отработал свои деньги? Следует разобраться, почему именно вам так кажется. Если столяр сделал стул, который на ваш взгляд выглядит слишком просто на фоне вашего камина и золотых статуй &mdash; поинтересуйтесь, почему он выбрал именно такой стиль для этого стула? Не кажется ли ему, что он не сочетается с интерьером? Попросите его обосновать свою позицию так, чтобы вы её поняли, и помните, что он &mdash; эксперт, которому вы доверились. Если результат вы все еще не считаете подходящим &mdash; объединитесь в поиске компромисса и обсудите больше деталей &laquo;<em>на берегу</em>&raquo;, ведь в итоге, именно вам нужно будет с гордостью хвастаться перед гостями новым стулом или привлекать клиентов с помощью нового дизайна.</p>', 1, '2019-02-06 00:04:43', '475356879606.jpg', '320-475356879606.jpg', '3', '2019-02-18 11:25:50'),
(32, 'Центробанк обновит логотип и фирменный стиль', '<p>Их разработало агентство :Otvetdesign.</p>\r\n\r\n<p>Агентство :Otvetdesign показало на своём сайте новый логотип и фирменный стиль для Центробанка. В ЦБ vc.ru сообщили, что уже утвердили новый фирменный стиль и начали его внедрение.</p>\r\n\r\n<blockquote>\r\n<p>&laquo;Кардинальных изменений не происходит &ndash; в новом стиле сохранилась преемственность с предыдущим, при этом он стал более современным и удобным для использования&raquo;,</p>\r\n</blockquote>\r\n\r\n<p>&mdash; говорят в регуляторе. Логотип стал более законченным, а в фирменном стиле появилась визуальная метафора горизонта, говорят в компании. Мы опирались на масштабность деятельности регулятора и его визионерскую миссию. Одним из ключевых образов стала визуальная метафора &ndash; горизонт. Символ обширных возможностей и движения вперед стал ключевой константой визуального ансамбля новой дизайн-системы.</p>\r\n\r\n<address>Владимир Федосеев управляющий партнёр :Otvetdesign</address>', 1, '2019-02-06 00:10:06', '419153344955.png', '320-419153344955.png', '4', '2019-02-18 11:22:05'),
(35, 'Хватит тащить хайповые технологии в продакшен', '<p>Очевидно, что сам по себе код мало кому нужен. Это всего лишь способ решения определённых задач. Бизнес-задач, если говорить конкретнее. А значит, выбор стека технологий должен быть целесообразным.</p>\r\n\r\n<p>Не по принципу &quot;вау, это супер новая библиотека от Google/Facebook/Apple/etc, давайте её заюзаем&quot;. А в зависимости от того, насколько выгодно будет его использовать. Ведь конечному пользователю глубоко наплевать, на чём написано приложение. Почему же тогда программистов порой уносит и они начинают заниматься откровенной ерундой?</p>\r\n\r\n<p>Например, из последнего. Хотят сделать MVP мобильного приложения. Сроки сжатые - около недели. Для фронта был выбран flutter. Людей, которые с ним работали, нет. Но использовать нужно именно flutter. Главный вопрос - ЗАЧЕМ??? Зачем выбирать фреймворк, которым владеют 1.5 человека в мире??</p>\r\n\r\n<p>Допустим, технология на 100% надёжная и у неё нет скрытых багов. ОК. Но как много специалистов, которые ей реально владеют? Как много крупных компаний её использовали? Как много best practices и способов решения самых популярных проблем? Очевидно, что не очень.</p>\r\n\r\n<p>А для нас важно, сделать MVP в максимально короткие сроки. И будет здорово, если ты пишешь на известной и предсказуемой технологии. К твоим услугам будет куча готовых библиотек, шаблонов и описанных вариантов того, как сделать какую-нибудь фичу. А в трудной ситуации тебе не придётся тратить часы, чтобы пофиксить пустяковую ошибку.</p>\r\n\r\n<p>И нет, разговор не о том, что один инструмент хороший, а другой - плохой. У всего есть своя зона применения. Для разработки нужно выбирать то, что будет выгодно использовать. Тот фреймворк/язык/библиотеку, на которой фичи будут создаваться быстрее. Надёжность и предсказуемость выше. А количество самописных велосипедов меньше.</p>\r\n\r\n<p>Хайповые вещи лучше оставить для личных разработок. И только после того как &quot;супер новая прогрессивная технология&quot; освоена и протестирована, её можно использовать в реальных проектах.</p>', 1, '2019-02-08 23:04:57', '563501528504.jpg', '320-563501528504.jpg', '3', '2019-02-18 11:20:12'),
(39, 'Украинские подростки создали &laquo;вечные&raquo; блокноты и карандаши nuka', '<p>Украинские маркетологи устали от блокнотов, которые заканчиваются, и создали &laquo;вечный&raquo;.</p>\r\n\r\n<p>Страницы <strong>nuka</strong> &mdash; из синтетической бумаги, которая не рвётся, не мнётся, не боится воды &mdash; а записи можно стереть специальными растворителем.</p>\r\n\r\n<p>Также они самостоятельно придумали свой сплав и разработали &laquo;вечный&raquo; металлический карандаш, который пишет благодаря окислительной реакции. Сейчас они готовятся запустить кампанию на Kickstarter &mdash; цена набора составит $59.</p>\r\n\r\n<p>В 2018 году команда попала в акселератор для hardware-проектов &mdash; Product Idea Accelerator от студии Concepter. Проект оценили в $1 млн и а также представили свой продукт на выставке CES.<br />\r\nСейчас предприниматели готовится запустить производство.</p>', 1, '2019-02-09 23:32:36', '149364199009.png', '320-149364199009.png', '20', '2019-02-10 22:41:02'),
(41, 'Mail.Ru Group выпустила &laquo;безопасный&raquo; браузер Atom', '<p><strong>Mail.Ru Group</strong> представила бета-версию своего нового <a href=\"https://browser.ru/#main\" rel=\"nofollow noopener\" target=\"_blank\">браузера</a> <strong>Atom </strong>для Windows. Он похож на &laquo;Яндекс.Браузер&raquo; и позволяет открыть вкладку инкогнито в один клик.</p>\r\n\r\n<p>Компания позиционирует Atom как безопасный и приватный браузер. В нём есть специальная панель, с помощью которой пользователь может проверить, какие разрешение на обработку своих данных он выдал сайту.</p>\r\n\r\n<blockquote>\r\n<p>&laquo;Основной упор в первой версии браузера сделан на то, что мы называем &laquo;управляемой безопасностью&raquo;. Мы хотим, чтобы пользователь чётко понимал и принимал риски своей работы в сети&raquo;,</p>\r\n</blockquote>\r\n\r\n<p>&mdash; сообщили vc.ru в пресс-службе Mail.Ru Group.</p>', 1, '2019-02-10 22:33:44', '497786400346.png', '320-497786400346.png', '5', NULL);
INSERT INTO `posts` (`id`, `title`, `text`, `author_id`, `date_time`, `post_img`, `post_img_small`, `cat`, `update_time`) VALUES
(42, '&laquo;Ведомости&raquo;: &laquo;ВКонтакте&raquo; запустит аналог сервиса для обмена короткими видео TikTok', '<p>Социальная сеть &laquo;ВКонтакте&raquo; разрабатывает собственный сервис для обмена короткими видео. Об этом <a href=\"https://www.vedomosti.ru/technology/articles/2019/02/17/794371-v-kontakte-korotkimi-video\" rel=\"nofollow noopener\" target=\"_blank\">пишут</a> &laquo;Ведомости&raquo; со ссылкой на источник, знакомый с деталями проекта, и источник, близкий к Mail.Ru Group, которой принадлежит &laquo;ВКонтакте&raquo;.</p>\r\n\r\n<h4>Что известно про новый сервис &laquo;ВКонтакте&raquo;:</h4>\r\n\r\n<ul>\r\n	<li>Соцсеть занялась разработкой сервиса несколько месяцев назад и планирует выпустить его к лету 2019 года. Его название собеседники издания не раскрывают.</li>\r\n	<li>Это будет отдельное приложение, но связанное со &laquo;ВКонтакте&raquo;. Интеграция позволит получить дополнительную базу пользователей для успешного запуска, пояснил один из источников.</li>\r\n	<li>Пользователи смогут записывать короткие видео и делиться ими с друзьями и другими пользователями приложения. Видеоролики в новом сервисе будут модерироваться редакторами &mdash; это должно поднять общий уровень контента, сказал один из собеседников газеты.</li>\r\n	<li>Собеседники &laquo;Ведомостей&raquo; не скрывают, что по функциям приложение будет похоже на популярный китайский сервис TikTok. Но будут и отличия: челленджи (несколько пользователей выполняют задания под музыку, например танцуют или едят на скорость) и батлы (задания на видео выполняют несколько пользователей одновременно).</li>\r\n</ul>\r\n\r\n<p>Представитель &laquo;ВКонтакте&raquo; отказался от комментариев.</p>\r\n\r\n<p>Китайский сервис TikTok в последние несколько лет стал популярен в России. По <a href=\"https://vc.ru/social/58482-ubs-i-mediascope-tiktok-stal-chetvertym-po-vremeni-ispolzovaniya-sredi-prilozheniy-socsetey-i-messendzherov-v-rossii\" rel=\"nofollow noopener\" target=\"_blank\">данным</a> UBS и Mediascope, в 2018 году сервис обогнал &laquo;Одноклассники&raquo; и вошёл в топ-5 приложений среди социальных сетей и мессенджеров, в которых пользователи проводят больше всего времени. В начале 2019 года TikTok обошёл Viber и поднялся на четвёртое место. По данным Mediascope, в декабре 2018 года пользователи тратили на просмотр видео в TikTok в среднем 13 минут.</p>', 1, '2019-02-18 12:25:32', NULL, NULL, '21', NULL),
(43, '7 точек роста конверсии или как повысить кликабельность кнопок', '<p>Кнопки играют важную роль в процессе покупок в интернете: неправильно оформленные кнопки имеют низкую кликабельность и, как следствие, низкую конверсию. В статье пойдет речь о том, как это исправить.</p>\r\n\r\n<h2>1. Наличие кнопки</h2>\r\n\r\n<p>Для того, чтобы по кнопке кликали, кнопка на странице должна быть. Это может прозвучать странным, но сайты без кнопок есть. На примере ниже &mdash; страница товара интернет-магазина <a href=\"https://www.velodrive.ru/bicycles/stels/stels-navigator-500-md-26-v020-2018.html\" rel=\"nofollow noopener\" target=\"_blank\">ВелоДрайв</a>. Сайт рекламируется в &laquo;Яндекс.Маркете&raquo;, но кнопки &laquo;Купить&raquo; на странице нет, а звонить и диктовать номер артикула не самый удобный вариант.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/1717e8ca-9f00-5e95-ae70-3eb524aa2fbb/-/scale_crop/680x480/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>На странице товара сайта velodrive.ru отсутствует кнопка</em></p>\r\n\r\n<h2>2. Кнопка должна быть похожа на кнопку</h2>\r\n\r\n<p>Для того, чтобы по кнопке кликали, пользователям необходимо понимать, что перед ними кнопка. Для этого их необходимо делать понятными и узнаваемыми, кнопки должны быть похожи на кнопки. Как этого добиться, рекомендации ниже.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/32ce6c9e-8c76-89c8-733d-531e224ce6fb/-/scale_crop/680x90/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Ссылка (слева) менее заметна, чем кнопка (справа)</em></p>\r\n\r\n<p><strong>2.1. Форма кнопки</strong> может быть любой (круглая, квадратная, прямоугольная), но наибольшее распространение получила именно прямоугольная, так как на ней вы сможете уместить надпись с её предназначением.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/85c95cb1-f02c-0e96-9bb2-0ff153237878/-/scale_crop/680x82/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Кнопки на сайте Tmall (AliExpress)</em></p>\r\n\r\n<p><strong>2.2. Скругленные углы кнопок. </strong>Большинство кнопок в физическом мире имеют закругленные углы, и такие кнопки на сайте проще узнать. К тому же, скругленные углы привычнее и потому <a href=\"http://uxmovement.com/thinking/why-rounded-corners-are-easier-on-the-eyes/\" rel=\"nofollow noopener\" target=\"_blank\">проще воспринимаются мозгом</a>. Пожалуй, самый наглядный пример &mdash; это клавиши на клавиатуре.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/0fd1b64a-c9f6-10a9-54f7-806f5ed2f0e9/-/scale_crop/680x285/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Apple Magic Keyboard, все клавиши имеют скругленные углы</em></p>\r\n\r\n<p><strong>2.3. Объемные кнопки. </strong>Кнопку лучше делать объемной, для этого используется тень по краям, градиент и рамка. Тренд последних лет &mdash; плоский дизайн (flat design). Он красив, но один из явных недостатков в том, что из-за отсутствия теней и объема кнопки сложнее отличить от некликабельных элементов дизайна. Nielsen Norman group провели <a href=\"https://www.nngroup.com/articles/flat-ui-less-attention-cause-uncertainty/\" rel=\"nofollow noopener\" target=\"_blank\">тест</a>, в ходе которого выяснили, что объемные кнопки пользователи находят на 22% быстрее, чем плоские.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/99008187-d104-cd72-d435-a89a2469d6f5/-/scale_crop/680x142/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Плоская кнопка (слева) и объемная кнопка с тенью и градиентом (справа)</em></p>\r\n\r\n<p><strong>2.4. Интерактивные кнопки. </strong>Кнопку желательно делать отзывчивой, то есть при наведении курсора менять её цвет и объем. Таким образом, ещё при наведении курсора (до клика) становится понятно, что элемент кликабелен.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/5f374041-e3f9-7ac7-10ac-e43a1e783bfa/-/scale_crop/680x114/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Кнопка по умолчанию (слева) и кнопка при наведении курсора (справа)</em></p>\r\n\r\n<h2>3. Царь-кнопка</h2>\r\n\r\n<p>Я вывел для себя одно хорошее правило, которое ещё ни разу меня не подвело: <strong>одна страница &mdash; одна главная кнопка</strong>. Не стоит перегружать страницу множеством кнопок, это рассеивает внимание, создает лишние вопросы и, как следствие, снижает кликабельность.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/00d44790-3d0f-d533-9f38-3f4701d1dc25/-/scale_crop/680x433/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Nix.ru, множество кнопок рассеивает внимание и снижает кликабельность</em></p>\r\n\r\n<p>Не заставляйте пользователей думать, дайте им только одну главную кнопку на странице. Это не означает, что на странице не может быть других кнопок. Они могут там быть, но их задачи второстепенные, поэтому их стоит сделать менее заметными с помощью размера и цвета, а также расположения на расстоянии от основной кнопки, создав свободное пространство. Это делается для того, чтобы второстепенные кнопки не конкурировали с основной за внимание пользователей.</p>\r\n\r\n<h2>4. Цвет кнопок</h2>\r\n\r\n<p><strong>4.1. Кнопка-призрак.</strong> Главная кнопка на странице должна быть контрастного цвета, чтобы выделяться от фона и окружающих элементов. Для менее приоритетных кнопок лучше не использовать цвет, сделав их прозрачными и поместив в рамку &mdash; это так называемые кнопки-призраки (ghost buttons).</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/ce002417-d3d9-d288-d5f6-b8c29121b0bf/-/scale_crop/680x187/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Цвет кнопки отделяет главную кнопку (сверху) и второстепенную (снизу)</em></p>\r\n\r\n<p>Но не стоит делать кнопку-призрак основной, иначе она сливается с фоном и становится менее заметной.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/3d505035-bc8a-7466-0c17-16777e0630e0/-/scale_crop/680x230/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Кнопка-призрак в качестве главной кнопки неудачное решение</em></p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/85d186fe-dbdb-7d96-24d2-0728f95aa83a/-/scale_crop/680x234/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Так гораздо лучше, mi-storekazan.ru</em></p>\r\n\r\n<p><strong>4.2. Какой цвет кнопки выбрать.</strong> Распространено мнение, что цвет кнопки может подсказывать действие, например:</p>\r\n\r\n<ul>\r\n	<li>Положительное действие (CTA: добавить, отправить, сохранить, загрузить): синий, зеленый;</li>\r\n	<li>Отрицательное действие (CTA: удалить, заблокировать, сбросить): красный;</li>\r\n	<li>Нейтральное действие (CTA: узнать больше, сравнить, добавить в избранное): черный;</li>\r\n	<li>Недоступное действие: серый.</li>\r\n</ul>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/db4914de-41ae-66a1-7ef5-72a4c7f01aef/-/scale_crop/680x167/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Цвет кнопок</em></p>\r\n\r\n<p>Основано данное мнение на том, что человек с детства привыкает к значению этих цветов, и этот опыт закрепляется на уровне подсознания. Потому что так работают светофоры на улицах (красный &mdash; стой, зеленый &mdash; иди). Так работают смартфоны (зеленый &mdash; начать звонок, красный &mdash; сбросить) и так далее.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/e5f3346d-4659-bf8d-8492-9d9a7cc904b0/-/scale_crop/680x512/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Привычное значение красного и зеленого цветов</em></p>\r\n\r\n<p>Но на деле ситуация с восприятием цветов состоит несколько иначе. Красный цвет светофора выбран не из-за психоэмоционального восприятия цвета и не из-за его символической интерпретации. Ведь вид красного яблока или красной вишни ни у кого не вызывает отрицательных, тревожных или негативных эмоций. В Китае, красный - цвет радости, жизни. В Индии, родине цветового символизма, аналогично.</p>\r\n\r\n<p>Дело в <a href=\"https://ru.wikipedia.org/wiki/%D0%A0%D1%8D%D0%BB%D0%B5%D0%B5%D0%B2%D1%81%D0%BA%D0%BE%D0%B5_%D1%80%D0%B0%D1%81%D1%81%D0%B5%D1%8F%D0%BD%D0%B8%D0%B5\" rel=\"nofollow noopener\" target=\"_blank\">рэлеевском рассеянии</a>, при котором красному цвету соответствует наибольшая длина волны видимого спектра. А это значит, что он менее всего подвержен рассеянию. При всех прочих равных, красный сигнал светофора водитель сможет различить на более удаленном расстоянии от перекрестка или пешеходного перехода и у него будет чуть больше времени для остановки.</p>\r\n\r\n<p>Но вернемся к конверсии, в результате <a href=\"https://www.matthewwoodward.co.uk/tips/how-i-increased-profits-by-changing-the-colour-of-a-button/\" rel=\"nofollow noopener\" target=\"_blank\">теста</a> кнопок разных цветов лучшая конверсия вышла у кнопки красного цвета - 52,25%, а худший показатель оказался у кнопки зеленого цвета 41,46%. Другими словами, ситуация абсолютно противоположная цветам светофора. Что говорит в пользу закона Рэлея и красный цвет более заметен.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/5d502ed9-fed1-7b20-c52b-d30d9d4bbd11/-/scale_crop/680x429/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Коэффициент конверсии кнопок разных цветов</em></p>\r\n\r\n<p>В ходе другого <a href=\"https://midasmedia.co.uk/call-to-action-buttons/\" rel=\"nofollow noopener\" target=\"_blank\">теста</a> измерялся коэффициент конверсии разных цветов текста на кнопках. В результате, с большим преимуществом лидировал белый цвет, с конверсией почти 77%. Белый цвет оказался наиболее читабельным из-за высокого контраста с фоном кнопок разных цветов.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/686710fa-539e-f248-87db-b4ad203a392b/-/scale_crop/680x323/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Коэффициент конверсии текста разных цветов на кнопках</em></p>\r\n\r\n<h2>5. Размер кнопок</h2>\r\n\r\n<p>Размер кнопок важен по двум основным причинам:</p>\r\n\r\n<ul>\r\n	<li>С помощью крупного размера можно привлечь внимание, поэтому главную кнопку лучше делать крупнее.</li>\r\n	<li>В мобильных устройствах отсутствует курсор мыши, а палец человека больше курсора, поэтому и кнопки необходимо делать больше, чтобы по ним удобно было попадать подушечками пальцев. В MIT провели <a href=\"http://touchlab.mit.edu/publications/2003_009.pdf\" rel=\"nofollow noopener\" target=\"_blank\">исследование</a>, в рамках которого выявили, что средний размер подушечек пальцев составляет от 10 до 14 мм, а кончики пальцев &mdash; от 8 до 10 мм. Поэтому рекомендуемый минимальный размер кнопки 10х10 мм.</li>\r\n</ul>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/7e0bd81c-d8ea-5cce-0403-ab3713705e6a/-/scale_crop/680x201/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>UX Magazine (слева) и фрагмент руководства от Apple (справа)</em></p>\r\n\r\n<p>Другой важный момент, который можно отнести к размерам &mdash; это расстояние между кнопками. Если кнопки находятся близко друг к другу, пользователи мобильных устройств могут случайно нажать неправильную кнопку пальцем. Рекомендуемое расстояние между кнопками &mdash; 3 мм.</p>\r\n\r\n<h2>6. Расположение кнопок</h2>\r\n\r\n<p>Кнопки должны должны быть заметны, для этого их лучше всего размещать там, где их ожидают увидеть, например, рядом с товаром на странице товара или рядом с итоговой ценой в корзине. Главную кнопку на странице необходимо размещать в первом экране. Не заставляйте пользователей искать важные кнопки по сайту, это снизит конверсию.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/fd4e9e80-1907-bf5a-4310-778ae312b013/-/scale_crop/680x571/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Главная кнопка &quot;Купить&quot; расположена на видном месте, в первом экране страницы товара на сайте &laquo;Спортмастер&raquo;</em></p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/df2b19a1-d177-4928-1768-1d480840e2f9/-/scale_crop/680x404/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Главная кнопка &laquo;Оформить заказ&raquo; расположена в первом экране корзины на сайте Adidas. Также кнопка продублирована на случай большого количества товаров в корзине.</em></p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/683f52e9-7802-d1d7-d460-abc7e12a59c4/-/scale_crop/680x453/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Главная кнопка &laquo;Оформить заказ&raquo; отсутствует в первом экране корзины маркетплейса &laquo;Беру&raquo;.</em></p>\r\n\r\n<h2>7. Текст на кнопках</h2>\r\n\r\n<p><strong>7.1. Понятный призыв к действию. </strong>Человек так устроен, что он с опасением относится к чему-то неизвестному. Поэтому надпись на кнопке должна подсказывать, что ожидает человека после клика, и побуждать к действию. В противном случае, кликабельность кнопки будет ниже.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/a633070e-8842-e6a3-cc18-cb99d0e790ea/-/scale_crop/680x61/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Текст на кнопке должен ясно подсказывать действие</em></p>\r\n\r\n<p><strong>7.2. Динамичные надписи на кнопках.</strong> Другой вариант &mdash; это изменяющиеся надписи на кнопках при наведении. По ним пользователь сразу понимает, какое действие он совершит, кликнув на кнопку. Это снижает неопределенность и повышает кликабельность.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/b722f9f6-fb8a-f0fb-1911-c56daadd98c7/-/scale_crop/680x333/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Динамичные кнопки в Twitter, кнопка меняет надпись и цвет при наведении курсора, подсказывая действие</em></p>\r\n\r\n<p><strong>7.3. Значки на кнопках. </strong>Помимо надписей, на кнопку можно вынести значок, так становится гораздо понятнее. Ниже пример кнопки на сайте Amazon, обратите внимание, что благодаря значку корзины значение кнопки понятно на любом языке.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/413f1ced-660c-6a13-02cf-555a7fd4c9ed/-/scale_crop/680x51/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Кнопки на сайте Amazon на русском (слева) и японском (справа) языках</em></p>\r\n\r\n<p>Но применять значки стоит обдуманно. Подбирайте простые и понятные значки, не злоупотребляйте украшениями. Значки должны подходить по смыслу тому разделу в который они направляют.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/6b53658f-618d-07d0-e6a5-c764618a2638/-/scale_crop/527x79/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Значки (сверху) и их значения (снизу)</em></p>\r\n\r\n<ul>\r\n	<li>1 &mdash; личный кабинет (регистрация или вход).</li>\r\n	<li>2 или 3 &mdash; с этими значками следует быть осторожнее, потому как они могут обозначать множество функций: избранное, сохраненное, список желаний, закладки, лайк, рейтинг. Легко запутаться.</li>\r\n	<li>4 &mdash; сравнение товаров (по характеристикам).</li>\r\n	<li>5 &mdash; просмотренные ранее товары.</li>\r\n	<li>6 &mdash; помощь (info).</li>\r\n</ul>\r\n\r\n<p><strong>7.4. Текст рядом с кнопками.</strong> Желательно указывать подписи к кнопкам и значкам. Без подписи кликабельность снижается, а вместе с ней и конверсия. Пример: когда компания Microsoft выпустила почтовый клиент Outlook 97, то в новом интерфейсе для кнопок были использованы значки основных команд.</p>\r\n\r\n<p>Но тесты показали, что люди практически не использовали панель инструментов с значками. Тогда было принято решение внести исправления: перестановка значков местами, отрисовка новых значков. Но с каждым изменением ничего не менялось, люди не использовали кнопки с значками.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/58e15134-7d7d-69bb-f836-eb54c091bba2/-/scale_crop/557x77/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Microsoft Outlook 97</em></p>\r\n\r\n<p>Наконец, команда проекта решила разместить текстовое описание рядом с каждым значком. И это сработало, люди начали активно использовать панель инструментов.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/ce501518-94d2-d461-0f67-844b7e6dabe8/-/scale_crop/680x93/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Microsoft Outlook 2003</em></p>\r\n\r\n<p>Поясняющий текст рядом с кнопками также помогают снять беспокойства пользователей, например: &quot;Я сейчас нажму на кнопку и у меня спишут деньги?&quot;</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/5ef021ce-4730-604e-fe6b-6c67b4a058e2/-/scale_crop/680x123/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Поясняющий текст рядом с кнопкой на сайте Booking.com</em></p>\r\n\r\n<p><strong>7.5. Не перегружайте кнопки текстом. </strong>Для этого можно воспользоваться рекомендациями выше.</p>\r\n\r\n<div>\r\n<div>\r\n<div><img src=\"https://leonardo.osnova.io/8a16c069-6eb2-e336-ab21-d07912f1a55e/-/scale_crop/680x167/center/-/format/webp/\" /></div>\r\n</div>\r\n</div>\r\n\r\n<p><em>Nix.ru</em></p>\r\n\r\n<div>Оригинал статьи: <a href=\"https://vc.ru/design/58713-7-tochek-rosta-konversii-ili-kak-povysit-klikabelnost-knopok\" target=\"_blank\">https://vc.ru/design/58713-7-tochek-rosta-konversii-ili-kak-povysit-klikabelnost-knopok</a></div>\r\n\r\n<p>В данной статье рассмотрены лишь семь точек роста конверсии. Если вы хотите узнать больше, то скачивайте книгу &laquo;<a href=\"https://conversant.me/blog\" rel=\"nofollow noopener\" target=\"_blank\">Конверсия на стероидах</a>&raquo; с сайта Conversant.me.</p>\r\n\r\n<address><a class=\"entry_header__subsite__author l-mr-23 lm-mr-0\" href=\"https://vc.ru/u/256155-eduard-fayzullin\">Эдуард Файзуллин</a></address>', 1, '2019-02-18 12:38:51', '270422384922.jpg', '320-270422384922.jpg', '22', '2019-02-18 12:41:02');

-- --------------------------------------------------------

--
-- Table structure for table `skills`
--

CREATE TABLE `skills` (
  `id` int(11) NOT NULL,
  `html` varchar(191) DEFAULT NULL,
  `css` varchar(191) DEFAULT NULL,
  `js` varchar(191) DEFAULT NULL,
  `jquery` varchar(191) DEFAULT NULL,
  `php` varchar(191) DEFAULT NULL,
  `mysql` varchar(191) DEFAULT NULL,
  `git` varchar(191) DEFAULT NULL,
  `gulp` varchar(191) DEFAULT NULL,
  `npm` varchar(191) DEFAULT NULL,
  `webpack` varchar(191) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `skills`
--

INSERT INTO `skills` (`id`, `html`, `css`, `js`, `jquery`, `php`, `mysql`, `git`, `gulp`, `npm`, `webpack`) VALUES
(1, '90', '60', '20', '50', '50', '30', '70', '80', '60', '0');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL,
  `role` varchar(191) DEFAULT NULL,
  `name` varchar(191) DEFAULT NULL,
  `surname` varchar(191) DEFAULT NULL,
  `country` varchar(191) DEFAULT NULL,
  `city` varchar(191) DEFAULT NULL,
  `avatar` varchar(191) DEFAULT NULL,
  `avatar_small` varchar(191) DEFAULT NULL,
  `recovery_code` varchar(191) DEFAULT NULL,
  `recovery_code_times` double DEFAULT NULL,
  `cart` varchar(191) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `email`, `password`, `role`, `name`, `surname`, `country`, `city`, `avatar`, `avatar_small`, `recovery_code`, `recovery_code_times`, `cart`) VALUES
(1, 'info@uac.com', '$2y$10$nqPT0V3S6yN2O7m.C3pDA.qW0XchH/HtwidJpLrffNNdcdaKWgbOK', 'admin', 'Сергей', 'Григорович', 'Беларусь', 'Березино', '979656711358.jpg', '48-979656711358.jpg', 'kFygG5z2UduJ6ew', 0, '[]'),
(18, 'mail@mail.ru', '$2y$10$RTTcbKp45y.niAtD75Qm0egKEAmEMULIsr9KgALby4NUy.lYCkngG', 'user', 'Дэнни', 'Трэхо', 'США', 'Лос-Анджелес', '501420476461.jpg', '48-501420476461.jpg', NULL, NULL, '{\"1\":10,\"3\":2}'),
(19, 'info3@uac.com', '$2y$10$XG47VIsw4qWGPLlL3HAJUee0Q9s1rhv1cSZhMXkIQYn656DCV5Se2', 'user', 'Николай', 'Троекуров', 'Россия', 'Волгоград', '528185697112.jpg', '48-528185697112.jpg', '0h5D4KQSLZm792k', 3, ''),
(23, 'test@test.com', '$2y$10$UT21LxyqtFC/RX.NFo4Jhes3mVidnJR2LJtd4iVrPHYwZZEK8HI8y', 'user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
(26, 'frank@telecom.ru', '$2y$10$u/tvx/.r8T8lm83Qbf4zNe/sXJ3lXIQwmNknN1Pee9FYstAbcKc0u', 'user', 'Фрэнк', 'Давыдов', 'Россия', 'Питер', '324452254963.jpg', '48-324452254963.jpg', NULL, NULL, NULL),
(28, 'delgardo@dow.com', '$2y$10$QWXxfSNdUH.65SKNgv3PQO4gA9R4n.DX/aLgQcxBJIPh82jMWNNIu', 'user', 'Frank', 'Delgado', 'USA', 'Оклахома', '857267536894.jpg', '48-857267536894.jpg', NULL, NULL, NULL);

-- --------------------------------------------------------

--
-- Table structure for table `works`
--

CREATE TABLE `works` (
  `id` int(11) UNSIGNED NOT NULL,
  `title` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `text` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci,
  `result` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `technology` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `author_id` int(11) UNSIGNED DEFAULT NULL,
  `date_time` datetime DEFAULT NULL,
  `link` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `github` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `work_image` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `work_image_small` varchar(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `update_time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Dumping data for table `works`
--

INSERT INTO `works` (`id`, `title`, `text`, `result`, `technology`, `author_id`, `date_time`, `link`, `github`, `work_image`, `work_image_small`, `update_time`) VALUES
(1, 'Макет &quot;Органика&quot;', '<p>Верстка одностраничного сайта по PSD макету. Учебный лендинг свёрстан во время обучения на курсе &quot;Верстальщик сайтов&quot; <a href=\"http://webcademy.ru\" target=\"_blank\">webcademy.ru</a></p>', '<p>Работа выполнена отлично.</p>', '<ul>\r\n	<li>HTML5,</li>\r\n	<li>CSS3</li>\r\n</ul>', 1, '2019-02-17 19:32:42', 'http://serjik.zzz.com.ua/organica/', '', '858831983837.jpg', '360-858831983837.jpg', '2019-02-17 23:38:05'),
(2, 'Учебный макет Аполло', '<p>Учебная работа. Верстка лендинга хостинг компании. Мобильная адаптивность.</p>', '<p>Работа выполнена отлично.</p>', '<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>LESS</li>\r\n</ul>', 1, '2019-02-17 23:41:19', 'http://serjik.zzz.com.ua/apollo/', '', '166068757311.jpg', '360-166068757311.jpg', '2019-02-17 23:44:55'),
(3, 'Личный сайт портфолио верстальщика', '<p>Верстка личного сайта портфолио верстальщика. Адаптивный дизайн. Добавлена анимация элементов при прокрутке страницы. Работает форма обратной связи.</p>', '<p>Работа выполнена отлично.</p>', '<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>jQuery</li>\r\n	<li>PHP</li>\r\n</ul>', 1, '2019-02-17 23:48:48', 'http://serjik.zzz.com.ua/portfolio/', '', '643984949962.png', '360-643984949962.png', '2019-02-17 23:51:04'),
(4, 'Вывод изображений из Инстаграмма', '<p>Учебный проект. Создан во время интенсива, проводимого школой <a href=\"http://webcademy.ru\" target=\"_blank\">webcademy.ru</a></p>', '<p>Созданный сайт выводит изображения из персональной страницы Инстаграмм. На сайте проигрывается музыка, которую можно поставить на паузу.</p>', '<ul>\r\n	<li>HTML5</li>\r\n	<li>CSS3</li>\r\n	<li>jQuery</li>\r\n</ul>', 1, '2019-02-18 00:02:25', 'https://serrjik.github.io/personal-insta-page/', 'https://github.com/Serrjik/personal-insta-page', '831518629761.png', '360-831518629761.png', '2019-02-18 00:09:25');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `about`
--
ALTER TABLE `about`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `index_foreignkey_comments_post` (`post_id`),
  ADD KEY `index_foreignkey_comments_user` (`user_id`);

--
-- Indexes for table `contacts`
--
ALTER TABLE `contacts`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `goods`
--
ALTER TABLE `goods`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `jobs`
--
ALTER TABLE `jobs`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `messages`
--
ALTER TABLE `messages`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `orders`
--
ALTER TABLE `orders`
  ADD PRIMARY KEY (`id`),
  ADD KEY `index_foreignkey_orders_user` (`user_id`);

--
-- Indexes for table `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`),
  ADD KEY `index_foreignkey_posts_author` (`author_id`);

--
-- Indexes for table `skills`
--
ALTER TABLE `skills`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `works`
--
ALTER TABLE `works`
  ADD PRIMARY KEY (`id`),
  ADD KEY `index_foreignkey_works_author` (`author_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `about`
--
ALTER TABLE `about`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `categories`
--
ALTER TABLE `categories`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=23;

--
-- AUTO_INCREMENT for table `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT for table `contacts`
--
ALTER TABLE `contacts`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `goods`
--
ALTER TABLE `goods`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT for table `jobs`
--
ALTER TABLE `jobs`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT for table `messages`
--
ALTER TABLE `messages`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=30;

--
-- AUTO_INCREMENT for table `orders`
--
ALTER TABLE `orders`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=44;

--
-- AUTO_INCREMENT for table `skills`
--
ALTER TABLE `skills`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=29;

--
-- AUTO_INCREMENT for table `works`
--
ALTER TABLE `works`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
